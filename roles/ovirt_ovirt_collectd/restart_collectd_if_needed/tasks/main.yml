---
# In oVirt specific use case we send collectd statistics data to fluentd or rsyslog.
# If fluentd/rsyslog is not running collectd will log errors messages when trying to connect to fluentd/rsyslog.
# If fluentd/rsyslog is not running we stop collectd.
- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers

- name: Tasks when logging collector is fluentd
  when: logging_collector|d('fluentd') == 'fluentd'
  block:
    - name: Pause for fluentd to start
      ansible.builtin.pause:
        seconds: 5

    - name: Check if fluentd is running
      ansible.builtin.systemd:
        name: fluentd
        state: started
        enabled: false
      register: fluentd_status_result
      changed_when: false
      failed_when: false

    - name: Set fluentd_is_running fact
      ansible.builtin.set_fact:
        fluentd_is_running: "{{ fluentd_status_result.status.ActiveState == 'active' }}"

    - name: Is fluentd running
      ansible.builtin.debug:
        msg: "{{ fluentd_is_running }}"

    - name: Restart collectd if fluentd is up
      ansible.builtin.debug:
        msg: trigger collectd restart, since fluentd is up
      when:
        - fluentd_is_running|default(false)|bool
      changed_when: fluentd_is_running|default(false)|bool
      notify: Restart collectd

    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      ansible.builtin.meta: flush_handlers

    - name: Pause for collectd to start
      ansible.builtin.pause:
        seconds: 5
      when:
        - fluentd_is_running|default(false)|bool

    - name: Stop collectd service if fluentd is not running
      ansible.builtin.service:
        name: collectd
        state: stopped
      when: not fluentd_is_running|default(false)|bool

- name: Actions when logging collector is rsyslog
  when: logging_collector|d('fluentd') == 'rsyslog'
  block:
    - name: Pause for rsyslog to start
      ansible.builtin.pause:
        seconds: 5

    - name: Check if rsyslog is running
      ansible.builtin.systemd:
        name: rsyslog
        state: started
        enabled: false
      register: service_rsyslog_status
      ignore_errors: true
      changed_when: false
      failed_when: false

    - name: Set rsyslog_is_running fact
      ansible.builtin.set_fact:
        rsyslog_is_running: "{{ service_rsyslog_status.status.ActiveState == 'active' }}"

    - name: Is rsyslog running
      ansible.builtin.debug:
        msg: "{{ rsyslog_is_running }}"

    - name: Restart collectd if rsyslog is up
      ansible.builtin.debug:
        msg: trigger collectd restart, since rsyslog is up"
      when:
        - rsyslog_is_running|default(false)|bool
      changed_when: rsyslog_is_running|default(false)|bool
      notify: Restart collectd

    - name: Force all notified handlers to run at this point, not waiting for normal sync points
      ansible.builtin.meta: flush_handlers

    - name: Pause for collectd to start
      ansible.builtin.pause:
        seconds: 5
      when:
        - rsyslog_is_running|default(false)|bool

    - name: Stop collectd service if rsyslog is not running
      ansible.builtin.service:
        name: collectd
        state: stopped
      when: not rsyslog_is_running|default(false)|bool

- name: Check if collectd is running
  ansible.builtin.systemd:
    name: collectd
    state: started
    enabled: false
  register: service_collectd_status
  ignore_errors: true
  changed_when: false
  failed_when: false

- name: Set collectd_is_running fact
  ansible.builtin.set_fact:
    collectd_is_running: "{{ service_collectd_status.status.ActiveState == 'active' }}"

- name: Is collectd running
  ansible.builtin.debug:
    msg: "{{ collectd_is_running }}"
