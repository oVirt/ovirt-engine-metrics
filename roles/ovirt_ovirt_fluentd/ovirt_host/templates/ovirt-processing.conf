<filter ovirt_collectd>
  @type record_transformer
  <record>
    timestamp ${time}
  </record>
</filter>

#Add to all tag metrics the collectd plugin name
<match ovirt_collectd>
  @type rewrite_tag_filter
  rewriterule1 plugin ^(\w+\S+) ${tag}.$1
</match>

#Statsd Plugin

<match ovirt_collectd.statsd>
  @type rewrite_tag_filter
  rewriterule1 type_instance ^(\w+\S+) ${tag}.$1
</match>

# Filter unneeded vdsm statistics

<filter ovirt_collectd.statsd.**>
  @type grep
  <regexp>
    key type_instance
    pattern ^ovirt_collectd.statsd.hosts.storage
  </regexp>
</filter>

#Transform to common Data Model

<match ovirt_collectd.**>
  @type collectd_nest
  add_tag_prefix nested
</match>

<filter nested.ovirt_collectd.statsd**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    tag project.ovirt-metrics-{{ ovirt_env_name }}
    hostname "#{Socket.gethostname}"
    ipaddr4 {{ ansible_default_ipv4.address }}
    ovirt {"entity":"${tag_parts[3]}","host_id":"{{ ovirt_vds_vds_id }}","engine_fqdn":"{{ ovirt_engine_fqdn }}", "cluster_name":"{{ ovirt_vds_cluster_name }}"}
    # timestamp example: "timestamp":"2017-05-14 09:44:59 +0300" to iso8601 format
    time ${DateTime.strptime("${record['collectd']['timestamp']}", "%Y-%m-%d %H:%M:%S %z").iso8601}
    for_remove ${record["collectd"].delete("timestamp")}
  </record>
  remove_keys for_remove
</filter>

<match nested.ovirt_collectd.statsd.**>
  @type rewrite_tag_filter
  rewriterule1 tag ^(\w+\S+) $1
</match>

<filter nested.ovirt_collectd.virt>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    tag project.ovirt-metrics-{{ ovirt_env_name }}
    hostname "#{Socket.gethostname}"
    ipaddr4 {{ ansible_default_ipv4.address }}
    ovirt {"entity":"vms","host_id":"{{ ovirt_vds_vds_id }}","engine_fqdn":"{{ ovirt_engine_fqdn }}", "cluster_name":"{{ ovirt_vds_cluster_name }}"}
    # time example: "timestamp":"2017-05-14 09:44:59 +0300" to iso8601 format
    time ${DateTime.strptime("${record['collectd']['timestamp']}", "%Y-%m-%d %H:%M:%S %z").iso8601}
    for_remove ${record["collectd"].delete("timestamp")}
  </record>
  remove_keys for_remove
</filter>

<match nested.ovirt_collectd.virt>
  @type rewrite_tag_filter
  rewriterule1 tag ^(\w+\S+) $1
</match>

<filter nested.ovirt_collectd.**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
    tag project.ovirt-metrics-{{ ovirt_env_name }}
    hostname "#{Socket.gethostname}"
    ipaddr4 {{ ansible_default_ipv4.address }}
    ovirt {"entity":"hosts","host_id":"{{ ovirt_vds_vds_id }}","engine_fqdn":"{{ ovirt_engine_fqdn }}", "cluster_name":"{{ ovirt_vds_cluster_name }}"}
    # timestamp example: "timestamp":"2017-05-14 09:44:59 +0300" to iso8601 format
    time ${DateTime.strptime("${record['collectd']['timestamp']}", "%Y-%m-%d %H:%M:%S %z").iso8601}
    for_remove ${record["collectd"].delete("timestamp")}
  </record>
  remove_keys for_remove
</filter>

<match nested.ovirt_collectd.**>
  @type rewrite_tag_filter
  rewriterule1 tag ^(\w+\S+) $1
</match>
